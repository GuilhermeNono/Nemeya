services:
  identityprovider:
    image: nono/idp:latest
    build:
      context: .
      dockerfile: Idp.Api/Dockerfile
    ports:    
      - "5082:80"
      - "7254:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=123456
    volumes:
      - ./aspnetapp.pfx:/https/aspnetapp.pfx:ro
    depends_on:
      - database
    networks:
      - backend-network
  
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Guilherme123@
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - backend-network
    
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack-pro 
    ports:
      - "127.0.0.1:4566:4566"            
      - "127.0.0.1:4510-4559:4510-4559"  
      - "127.0.0.1:443:443"              
    environment:
      - SERVICES=kms
      - LOCALSTACK_AUTH_TOKEN=ls-ziceGOpi-7304-7955-QeFa-HITIpacU80f8  
      - DEBUG=1
      - DEFAULT_REGION=us-east-1
      - LOCALSTACK_SSL=true
      - SKIP_SSL_CERT_DOWNLOAD=1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - PERSISTENCE=1
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - backend-network

volumes:
  sqlserver-data:
    
networks:
  backend-network:
    driver: bridge